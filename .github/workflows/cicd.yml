name: Crime Data Pipeline CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, pre-prod, prod)'
        required: true
        default: 'pre-prod'

  issue_comment:
    types: [created]

env:
  PYTHON_VERSION: '3.9'
  JAVA_VERSION: '11'

# Add permissions block
permissions:
  issues: write
  contents: read
  actions: write

jobs:

  pre-prod-environment:

    environment: pre-prod
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: pipeline-artifacts
        path: artifacts/
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r artifacts/requirements.txt
    
    - name: Install Databricks CLI
      run: pip install databricks-cli
    
    - name: Configure Databricks CLI
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        databricks configure --token <<EOF
        $DATABRICKS_HOST
        $DATABRICKS_TOKEN
        EOF
    
    - name: Trigger Databricks Job (pre-prod)
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        DATABRICKS_CLUSTER_ID: ${{ secrets.DATABRICKS_CLUSTER_ID }}
      run: |
        databricks jobs run-now --job-id ${{ secrets.DATABRICKS_PREPROD_JOB_ID }} \
          --notebook-params '{
            "ENVIRONMENT": "pre-prod",
            "AZURE_STORAGE_ACCOUNT_NAME": "${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}",
            "AZURE_STORAGE_ACCOUNT_KEY": "${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}",
            "AZURE_STORAGE_CONTAINER_NAME": "${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}"
          }'
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: preprod-logs
        path: logs/
    
    - name: Request prod promotion
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "Request to promote to prod environment",
            body: "Pre-prod environment pipeline completed successfully. Please review and approve promotion to prod environment.",
            labels: ["promotion-request", "prod"]
          })